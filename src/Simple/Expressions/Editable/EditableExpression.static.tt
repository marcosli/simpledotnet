<#@ template language="C#v3.5" hostspecific="True" debug="True" #>
<#@ Import Namespace="System" #>
<#@ Import Namespace="System.Collections.Generic" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Linq.Expressions;

namespace Simple.Expressions.Editable
{
    public partial class EditableExpression
    {
<#
            IList<string> list = new List<string>();
            list.Add("ConstantExpression");
            list.Add("BinaryExpression");
            list.Add("ConditionalExpression");
            list.Add("InvocationExpression");
            list.Add("LambdaExpression");
            list.Add("ParameterExpression");
            list.Add("ListInitExpression");
            list.Add("MemberExpression");
            list.Add("MemberInitExpression");
            list.Add("MethodCallExpression");
            list.Add("NewArrayExpression");
            list.Add("NewExpression");
            list.Add("TypeBinaryExpression");
            list.Add("UnaryExpression");
        
            foreach(string item in list) 
            {
#>
        public static Editable<#= item #> CreateTyped(<#= item #> ex)
        {
            return new Editable<#= item #>(ex);
        }
        
<# } #>
    }
}
