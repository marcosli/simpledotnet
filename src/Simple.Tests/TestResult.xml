<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Projects\simpledotnet\bin\SimpleTests.exe" total="431" errors="0" failures="0" not-run="0" ignored="0" skipped="0" invalid="0" date="2009-08-29" time="09:27:01">
  <environment nunit-version="2.5.0.9122" clr-version="2.0.50727.3082" os-version="Microsoft Windows NT 5.2.3790 Service Pack 2" platform="Win32NT" cwd="C:\Projects\simpledotnet\src\SimpleTests" machine-name="VM-001-NONAME" user="Administrator" user-domain="VM-001-NONAME" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="C:\Projects\simpledotnet\bin\SimpleTests.exe" executed="True" success="True" time="38.205" asserts="0">
    <results>
      <test-suite name="Simple" executed="True" success="True" time="37.674" asserts="0">
        <results>
          <test-suite name="Tests" executed="True" success="True" time="37.624" asserts="0">
            <results>
              <test-suite name="ConfigSource" executed="True" success="True" time="4.226" asserts="0">
                <results>
                  <test-suite name="ConfiguratorInterfaceFixture" executed="True" success="True" time="1.963" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.ConfigSource.ConfiguratorInterfaceFixture.LoadFromInstanceTest" executed="True" success="True" time="0.371" asserts="4" />
                      <test-case name="Simple.Tests.ConfigSource.ConfiguratorInterfaceFixture.LoadFromStreamTest" executed="True" success="True" time="1.502" asserts="4" />
                      <test-case name="Simple.Tests.ConfigSource.ConfiguratorInterfaceFixture.LoadFromXmlTest" executed="True" success="True" time="0.030" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="FactoryFixture" executed="True" success="True" time="0.591" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.BestKeyOfTests" executed="True" success="True" time="0.030" asserts="8" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.ExpiringFactoringTest" executed="True" success="True" time="0.451" asserts="4" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.RedoSourcesFactoredTest" executed="True" success="True" time="0.030" asserts="6" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.RedoSourcesFactoredTestWithKey" executed="True" success="True" time="0.010" asserts="6" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.SimpleFactoringTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.SourcesFactoredTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.WrappedConfigFactoredTest" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.WrappedConfigTest" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.WrappedFactoryConfigTest" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.ConfigSource.FactoryFixture.WrappedKeyedFactoryConfigTest" executed="True" success="True" time="0.020" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="LoggerFactoryFixture" executed="True" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.ConfigSource.LoggerFactoryFixture.NullLoggerTests" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="XmlConfigSourceFixture" executed="True" success="True" time="1.582" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.BasicStreamTest" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.BasicStringTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.BasicTextReaderTest" executed="True" success="True" time="0.030" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.BasicXmlContentHolderTest" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.BasicXmlDocumentTest" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.BasicXmlElementTest" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.BasicXmlReaderTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.ComplexTypesTest" executed="True" success="True" time="0.811" asserts="13" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.MissingAnIntegralTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.MissingAStringTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.MoreInformationThanCanHandle" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.NotKnownTypesTest" executed="True" success="True" time="0.551" asserts="13" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.UsingTransformation" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.UsingTransformationEarlyInsert" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.UsingTransformationLateInsert" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.UsingTransformationWrapped" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.UsingTransformationWrappedEarlyInsert" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.UsingTransformationWrappedLateInsert" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.XPathStreamTest" executed="True" success="True" time="0.020" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.XPathStringTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.XPathTextReaderTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.XPathXmlContentHolderTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.XPathXmlDocumentTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.XPathXmlElementTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.ConfigSource.XmlConfigSourceFixture.XPathXmlReaderTest" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="XmlFileConfigSourceFixture" executed="True" success="True" time="0.060" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.ConfigSource.XmlFileConfigSourceFixture.SimpleLoadAndModifyTest" executed="True" success="True" time="0.020" asserts="6" />
                      <test-case name="Simple.Tests.ConfigSource.XmlFileConfigSourceFixture.SimpleLoadAndModifyTestWithTransformation" executed="True" success="True" time="0.020" asserts="6" />
                      <test-case name="Simple.Tests.ConfigSource.XmlFileConfigSourceFixture.SimpleLoadTest" executed="True" success="True" time="0.010" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="DataAccess" executed="True" success="True" time="17.215" asserts="0">
                <results>
                  <test-suite name="DataContextFixture" executed="True" success="True" time="11.206" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.DataAccess.DataContextFixture.NestedTransactions" executed="True" success="True" time="10.806" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.DataContextFixture.SimpleDataContextTest" executed="True" success="True" time="0.020" asserts="8" />
                      <test-case name="Simple.Tests.DataAccess.DataContextFixture.TestReopenDataContext" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.DataContextFixture.TryCloseMainSessionTest" executed="True" success="True" time="0.010" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="EntityServiceFixture" executed="True" success="True" time="3.054" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestCountByFilter" executed="True" success="True" time="0.761" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestCreateIdBySaveOrUpdateProduct" executed="True" success="True" time="0.130" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestCreateIdBySaveProduct" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestDeleteOne" executed="True" success="True" time="0.090" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestDeleteOneByFilter" executed="True" success="True" time="0.060" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestDeleteOneById" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestFindByTrueFilter" executed="True" success="True" time="0.270" asserts="3" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestFindFirstByStartsWithFilter" executed="True" success="True" time="0.080" asserts="3" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestFindFirstCustomerReverseIdOrder" executed="True" success="True" time="0.100" asserts="3" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestFindFirstCustomerTwoOrder" executed="True" success="True" time="0.070" asserts="3" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestFindFirstCustomerWithAndExpression" executed="True" success="True" time="0.120" asserts="3" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestFindFirstCustomerWithOrExpression" executed="True" success="True" time="0.050" asserts="3" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestFindLastProduct" executed="True" success="True" time="0.040" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListAll" executed="True" success="True" time="0.040" asserts="93" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListAllSkip20Take10" executed="True" success="True" time="0.100" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListAllTop10" executed="True" success="True" time="0.020" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListByFilter" executed="True" success="True" time="0.050" asserts="33" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListByFilterSkip20Take10" executed="True" success="True" time="0.030" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListByFilterTop10" executed="True" success="True" time="0.030" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListProductsByCategoryName" executed="True" success="True" time="0.050" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListTop10ProductsAll" executed="True" success="True" time="0.030" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListWithOrder" executed="True" success="True" time="0.060" asserts="93" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListWithOrderAndFilter" executed="True" success="True" time="0.060" asserts="33" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListWithOrderAndFilterSkip20Take10" executed="True" success="True" time="0.060" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListWithOrderAndFilterTop10" executed="True" success="True" time="0.050" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListWithOrderSkip20Take10" executed="True" success="True" time="0.040" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestListWithOrderTop10" executed="True" success="True" time="0.030" asserts="13" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestLoadById" executed="True" success="True" time="0.020" asserts="6" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestMergeEntity" executed="True" success="True" time="0.080" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestRefreshEntity" executed="True" success="True" time="0.090" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestSaveNew" executed="True" success="True" time="0.050" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestServiceUpdate" executed="True" success="True" time="0.040" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.EntityServiceFixture.TestSmartUpdate" executed="True" success="True" time="0.020" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="EntityTransformersFixture" executed="True" success="True" time="1.773" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestHQLQueryByConstructorSample1" executed="True" success="True" time="1.432" asserts="11" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestHQLQueryByPropertiesSample1" executed="True" success="True" time="0.060" asserts="11" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestHQLQueryByPropertiesSample2" executed="True" success="True" time="0.020" asserts="11" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestHQLQueryToDictionaryWontFail" executed="True" success="True" time="0.030" asserts="16" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestSQLQueryByConstructorSample1" executed="True" success="True" time="0.140" asserts="11" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestSQLQueryByPropertiesSample1" executed="True" success="True" time="0.020" asserts="6" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestSQLQueryByPropertiesSample2" executed="True" success="True" time="0.020" asserts="11" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestSQLQueryToDictionary" executed="True" success="True" time="0.020" asserts="16" />
                      <test-case name="Simple.Tests.DataAccess.EntityTransformersFixture.TestSQLQueryToDictionaryFail" executed="True" success="True" time="0.020" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ExpressionFilterFixture" executed="True" success="True" time="0.090" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.DataAccess.ExpressionFilterFixture.TestCustomerLoadById" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.ExpressionFilterFixture.TestCustomerLoadIdContains" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.ExpressionFilterFixture.TestCustomerLoadIdContainsFalse" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.ExpressionFilterFixture.TestCustomerLoadMultipleColumn" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.ExpressionFilterFixture.TestProductLoadByIdAndCategory" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.ExpressionFilterFixture.TestProductLoadByIdAndCategoryFalse" executed="True" success="True" time="0.010" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="NHConfigFixture" executed="True" success="True" time="0.431" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.DataAccess.NHConfigFixture.TestLoadDialect" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NHConfigFixture.TestMapEntities" executed="True" success="True" time="0.070" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NHConfigFixture.TestMapEntityAssembly" executed="True" success="True" time="0.320" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="NHLinqFixture" executed="True" success="True" time="0.150" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.DataAccess.NHLinqFixture.GroupTerritoriesByEmployee" executed="True" success="True" time="0.150" asserts="10" />
                    </results>
                  </test-suite>
                  <test-suite name="NorthwindCheckFixture" executed="True" success="True" time="0.471" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckCategories" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckCustomer" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckEmployees" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckEmployeeTerritories" executed="True" success="True" time="0.190" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckEmployeeTerritoriesEquality" executed="True" success="True" time="0.060" asserts="2" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckProducts" executed="True" success="True" time="0.040" asserts="5" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckRegions" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckSuppliers" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.DataAccess.NorthwindCheckFixture.CheckTerritories" executed="True" success="True" time="0.030" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Experiences" executed="True" success="True" time="0.070" asserts="0">
                <results>
                  <test-suite name="LambdaFixture" executed="True" success="True" time="0.040" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Experiences.LambdaFixture.TestSerializationWithILBytes" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.Experiences.LambdaFixture.TestSerializationWithStackReference" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Experiences.LambdaFixture.TestSerializeExpression" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ReflectionFixture" executed="True" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Experiences.ReflectionFixture.DifferentTypesWithTheSameGuid" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.Experiences.ReflectionFixture.TestSetterReturnsAlwaysTheSameMethod" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Experiences.ReflectionFixture.WhichPropertyIsUnique" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="RemotingFixture" executed="True" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Experiences.RemotingFixture.CreateConcreteClassProxy" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Experiences.RemotingFixture.TestSameServiceInSameEndpoint" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Service" executed="True" success="True" time="12.348" asserts="0">
                <results>
                  <test-suite name="ChannelSelectorFixture" executed="True" success="True" time="0.080" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.ChannelSelectorFixture.TestHttp" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.ChannelSelectorFixture.TestIpc" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.ChannelSelectorFixture.TestNotKnown" executed="True" success="True" time="0.050" asserts="0" />
                      <test-case name="Simple.Tests.Service.ChannelSelectorFixture.TestTcp" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DefaultClientInterceptorFixture" executed="True" success="True" time="0.210" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestException" executed="True" success="True" time="0.030" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestGenerics" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestGenericsVoid" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestHookException" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestHookExceptionOnFinally" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestIdentityMatch" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestIntInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestNonHookedException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestNonHookedExceptionOnFinally" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestOutParams" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestParams" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestRefParams" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestSelectiveHook" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestStringInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestVoid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultClientInterceptorFixture.TestVoidInt" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DefaultFactoryFixture" executed="True" success="True" time="0.240" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.ConnectToSecondServiceTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.HeaderPassingAndReturningTest" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.HeaderPassingTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.MarshalOtherServiceTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.SerializeComplexType" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.SimpleBigMarshalingTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.SimpleExpressionSerializationTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.SimpleIndexedPropertyTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.SimpleMethodOverloadTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.SimplePropertyTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.SimpleServiceMarshalingTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.StackReferenceExpressionSerializationTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.TestCreateSameServiceTwice" executed="True" success="True" time="0.010" asserts="6" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.TestFailConnect" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.TestManyCalls" executed="True" success="True" time="0.050" asserts="50" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.TestPostFailConnectState" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.TestSelfType" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultFactoryFixture.WrongPassedIdentityTest" executed="True" success="True" time="0.010" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DefaultServerInterceptorFixture" executed="True" success="True" time="0.110" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestGenerics" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestGenericsVoid" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestHookException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestHookExceptionOnFinally" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestIdentityMatch" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestInt" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestIntInt" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestNonHookedException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestNonHookedExceptionOnFinally" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestOutParams" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestParams" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestRefParams" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestSelectiveHook" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestStringInt" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestVoid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Service.DefaultServerInterceptorFixture.TestVoidInt" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HookOrderClientFixture" executed="True" success="True" time="0.080" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HookOrderClientFixture.TestHookOrderBeforeSetExternalAddInternal" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderClientFixture.TestHookOrderBeforeSetInternalAddExternal" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderClientFixture.TestHookOrderPremises" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.Service.HookOrderClientFixture.TestHookOrderSetExternalAddInternal" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderClientFixture.TestHookOrderSetInternalAddExternal" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderClientFixture.TestServiceStopping" executed="True" success="True" time="0.010" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HookOrderMixedFixture" executed="True" success="True" time="0.050" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HookOrderMixedFixture.TestHookOrderBeforeSetExternalAddInternal" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderMixedFixture.TestHookOrderBeforeSetInternalAddExternal" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderMixedFixture.TestHookOrderPremises" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.Service.HookOrderMixedFixture.TestHookOrderSetExternalAddInternal" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderMixedFixture.TestHookOrderSetInternalAddExternal" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderMixedFixture.TestServiceStopping" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HookOrderServerFixture" executed="True" success="True" time="0.040" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HookOrderServerFixture.TestHookOrderBeforeSetExternalAddInternal" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderServerFixture.TestHookOrderBeforeSetInternalAddExternal" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderServerFixture.TestHookOrderPremises" executed="True" success="True" time="0.010" asserts="3" />
                      <test-case name="Simple.Tests.Service.HookOrderServerFixture.TestHookOrderSetExternalAddInternal" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderServerFixture.TestHookOrderSetInternalAddExternal" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HookOrderServerFixture.TestServiceStopping" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpRemotingClientInterceptorFixture" executed="True" success="True" time="4.326" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestException" executed="True" success="True" time="0.931" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestGenerics" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestGenericsVoid" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestHookException" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestHookExceptionOnFinally" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestIdentityMatch" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestIntInt" executed="True" success="True" time="0.030" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestNonHookedException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestNonHookedExceptionOnFinally" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestOutParams" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestParams" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestRefParams" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestSelectiveHook" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestString" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestStringInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestVoid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingClientInterceptorFixture.TestVoidInt" executed="True" success="True" time="0.010" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpRemotingFactoryFixture" executed="True" success="True" time="3.205" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.ConnectToSecondServiceTest" executed="True" success="True" time="0.040" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.HeaderPassingAndReturningTest" executed="True" success="True" time="0.020" asserts="4" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.HeaderPassingTest" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.MarshalOtherServiceTest" executed="True" success="True" time="0.080" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.SerializeComplexType" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.SimpleBigMarshalingTest" executed="True" success="True" time="0.060" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.SimpleExpressionSerializationTest" executed="True" success="True" time="0.280" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.SimpleIndexedPropertyTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.SimpleMethodOverloadTest" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.SimplePropertyTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.SimpleServiceMarshalingTest" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.StackReferenceExpressionSerializationTest" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.TestCreateSameServiceTwice" executed="True" success="True" time="0.040" asserts="6" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.TestFailConnect" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.TestManyCalls" executed="True" success="True" time="0.220" asserts="50" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.TestPostFailConnectState" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.TestSelfType" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingFactoryFixture.WrongPassedIdentityTest" executed="True" success="True" time="0.020" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpRemotingServerInterceptorFixture" executed="True" success="True" time="2.724" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestException" executed="True" success="True" time="0.060" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestGenerics" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestGenericsVoid" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestHookException" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestHookExceptionOnFinally" executed="True" success="True" time="0.030" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestIdentityMatch" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestIntInt" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestNonHookedException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestNonHookedExceptionOnFinally" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestOutParams" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestParams" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestRefParams" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestSelectiveHook" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestStringInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestVoid" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpRemotingServerInterceptorFixture.TestVoidInt" executed="True" success="True" time="0.010" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpSelfRemotingClientInterceptorFixture" executed="True" success="True" time="0.461" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestException" executed="True" success="True" time="0.150" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestGenerics" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestGenericsVoid" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestHookException" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestHookExceptionOnFinally" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestIdentityMatch" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestInt" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestIntInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestNonHookedException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestNonHookedExceptionOnFinally" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestOutParams" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestParams" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestRefParams" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestSelectiveHook" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestStringInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestVoid" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingClientInterceptorFixture.TestVoidInt" executed="True" success="True" time="0.010" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpSelfRemotingFactoryFixture" executed="True" success="True" time="0.501" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.ConnectToSecondServiceTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.HeaderPassingAndReturningTest" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.HeaderPassingTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.MarshalOtherServiceTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.SerializeComplexType" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.SimpleBigMarshalingTest" executed="True" success="True" time="0.050" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.SimpleExpressionSerializationTest" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.SimpleIndexedPropertyTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.SimpleMethodOverloadTest" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.SimplePropertyTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.SimpleServiceMarshalingTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.StackReferenceExpressionSerializationTest" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.TestCreateSameServiceTwice" executed="True" success="True" time="0.020" asserts="6" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.TestFailConnect" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.TestManyCalls" executed="True" success="True" time="0.210" asserts="50" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.TestPostFailConnectState" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.TestSelfType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingFactoryFixture.WrongPassedIdentityTest" executed="True" success="True" time="0.010" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpSelfRemotingServerInterceptorFixture" executed="True" success="True" time="0.180" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestException" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestGenerics" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestGenericsVoid" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestHookException" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestHookExceptionOnFinally" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestIdentityMatch" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestInt" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestIntInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestNonHookedException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestNonHookedExceptionOnFinally" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestOutParams" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestParams" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestRefParams" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestSelectiveHook" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestStringInt" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestVoid" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.HttpSelfRemotingServerInterceptorFixture.TestVoidInt" executed="True" success="True" time="0.010" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ServiceConfigFixture" executed="True" success="True" time="0.130" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.Service.ServiceConfigFixture.TestNullServiceCreation" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.ServiceConfigFixture.TestOutCall" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.Service.ServiceConfigFixture.TestReconfigure" executed="True" success="True" time="0.050" asserts="2" />
                      <test-case name="Simple.Tests.Service.ServiceConfigFixture.TestRefCall" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.Service.ServiceConfigFixture.TestUnconfigure" executed="True" success="True" time="0.060" asserts="2" />
                      <test-case name="Simple.Tests.Service.ServiceConfigFixture.TestVoidCall" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="SimpleLib" executed="True" success="True" time="3.655" asserts="0">
                <results>
                  <test-suite name="AttributeCacheFixture" executed="True" success="True" time="0.020" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.AttributeCacheFixture.ClassAttributeEnumTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.AttributeCacheFixture.ClassAttributesFirstTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Simple.Tests.SimpleLib.AttributeCacheFixture.PropAttributeEnumTest" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.AttributeCacheFixture.PropAttributesFirstTest" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="BaseWDProviderTests" executed="True" success="True" time="0.220" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.BaseWDProviderTests.HeavyBackwardConsiderTest" executed="True" success="True" time="0.100" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.BaseWDProviderTests.HeavyBackwardNotConsiderTest" executed="True" success="True" time="0.000" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.BaseWDProviderTests.HeavyForwardConsiderTest" executed="True" success="True" time="0.000" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.BaseWDProviderTests.HeavyForwardNotConsiderTest" executed="True" success="True" time="0.010" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.BaseWDProviderTests.SoftTest" executed="True" success="True" time="0.020" asserts="1000" />
                    </results>
                  </test-suite>
                  <test-suite name="ClassNameHelperFixture" executed="True" success="True" time="0.050" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.FlatGenericClassDefinitionName" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.FlatGenericClassInnerName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.FlatGenericClassName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.FlatGenericClassTwoName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.FlatNormalClassDefinitionName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.GenericClassDefinitionName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.GenericClassInnerName" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.GenericClassName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.GenericClassTwoName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ClassNameHelperFixture.NormalClassDefinitionName" executed="True" success="True" time="0.010" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DynamicProxyFixture" executed="True" success="True" time="0.130" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.DynamicProxyFixture.TestInvalidCastWithoutStrict" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.DynamicProxyFixture.TestSimpleProxy" executed="True" success="True" time="0.050" asserts="8" />
                      <test-case name="Simple.Tests.SimpleLib.DynamicProxyFixture.TestStrictness" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.DynamicProxyFixture.TestStrictnessWithInvalidCast" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.DynamicProxyFixture.TestStrictnessWithSupportedList" executed="True" success="True" time="0.020" asserts="3" />
                      <test-case name="Simple.Tests.SimpleLib.DynamicProxyFixture.TestStrictnessWithSupportedListAndInvalidCast" executed="True" success="True" time="0.010" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="EntityHelperFixture" executed="True" success="True" time="0.170" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.EntityHelperFixture.TestBasicTypesEqualityInner" executed="True" success="True" time="0.130" asserts="7" />
                      <test-case name="Simple.Tests.SimpleLib.EntityHelperFixture.TestBasicTypesEqualityOuter" executed="True" success="True" time="0.020" asserts="7" />
                      <test-case name="Simple.Tests.SimpleLib.EntityHelperFixture.TestDifferentTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.EntityHelperFixture.TestInheritanceOuter" executed="True" success="True" time="0.010" asserts="7" />
                      <test-case name="Simple.Tests.SimpleLib.EntityHelperFixture.TestNullrefs" executed="True" success="True" time="0.010" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="EnumTypeFixture" executed="True" success="True" time="0.050" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.EnumTypeFixture.TestValue1" executed="True" success="True" time="0.030" asserts="6" />
                      <test-case name="Simple.Tests.SimpleLib.EnumTypeFixture.TestValue2" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Simple.Tests.SimpleLib.EnumTypeFixture.TestValue3" executed="True" success="True" time="0.010" asserts="5" />
                      <test-case name="Simple.Tests.SimpleLib.EnumTypeFixture.TestValue4" executed="True" success="True" time="0.010" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="ExpressionHelperFixture" executed="True" success="True" time="0.070" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.FailSettingMethod" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.TestNestedMethodName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.TestNestedPropertyName" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.TestNestedPropertySet" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.TestNoDefaultConstructorSet" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.TestSimplePropertyName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.TestSimplePropertySet" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.ExpressionHelperFixture.TestSimplePropertySetNewInstance" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="InvokerFactoryFixture" executed="True" success="True" time="0.090" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestGenerics" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestGenericsVoid" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestIntParam" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestIntReturn" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestLambdaVoid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestLessArgumentsSignature" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestMoreArgumentsSignature" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestOutParam" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestParams" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestRefParam" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestStringReturn" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestTypedLambda" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestVoidReturn" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.InvokerFactoryFixture.TestWrongTypeSignature" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="MarshallableDynamicProxyFixture" executed="True" success="True" time="0.050" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.MarshallableDynamicProxyFixture.TestException" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.MarshallableDynamicProxyFixture.TestGenericParamReturning" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MarshallableDynamicProxyFixture.TestIntParamReturning" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MarshallableDynamicProxyFixture.TestIntReturning" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MarshallableDynamicProxyFixture.TestRefAndOut" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.SimpleLib.MarshallableDynamicProxyFixture.TestStringReturning" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MarshallableDynamicProxyFixture.TestVoidReturning" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="MathHelperFixture" executed="True" success="True" time="0.030" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.MathHelperFixture.FirstPrimes" executed="True" success="True" time="0.010" asserts="5" />
                      <test-case name="Simple.Tests.SimpleLib.MathHelperFixture.ModRound" executed="True" success="True" time="0.010" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="MetaLinqFixture" executed="True" success="True" time="1.813" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestAddExpression" executed="True" success="True" time="1.512" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestArrayCreation" executed="True" success="True" time="0.070" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestConditionalAssertion" executed="True" success="True" time="0.020" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestConstantExpression" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestConstruction" executed="True" success="True" time="0.080" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestMethodCall" executed="True" success="True" time="0.030" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestStackMethodCall" executed="True" success="True" time="0.030" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MetaLinqFixture.TestStackReference" executed="True" success="True" time="0.030" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="MethodCacheFixture" executed="True" success="True" time="0.070" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.MethodCacheFixture.TestMethodCachedResult" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MethodCacheFixture.TestMethodNonCachedResult" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MethodCacheFixture.TestPropertyGetCachedResult" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MethodCacheFixture.TestPropertyNonCachedResult" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Simple.Tests.SimpleLib.MethodCacheFixture.TestPropertySetCachedResult" executed="True" success="True" time="0.010" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="MiscFixture" executed="True" success="True" time="0.020" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.MiscFixture.TransformationListTest" executed="True" success="True" time="0.020" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="StringFragmenterFixture" executed="True" success="True" time="0.260" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.ArrayTest" executed="True" success="True" time="0.080" asserts="13" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.ExtremeCaseAllInOne" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.FormatExceptionCase" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.ParseIntAndDate" executed="True" success="True" time="0.030" asserts="3" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.SimpleTest1" executed="True" success="True" time="0.010" asserts="5" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.SimpleTest2" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.SimpleTestFormatException3" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.SimpleTestFormatException4" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="Simple.Tests.SimpleLib.StringFragmenterFixture.StreamTest" executed="True" success="True" time="0.080" asserts="14" />
                    </results>
                  </test-suite>
                  <test-suite name="WorkingDaysFixture" executed="True" success="True" time="0.541" asserts="0">
                    <results>
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.HeavyBackwardConsiderTest" executed="True" success="True" time="0.050" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.HeavyBackwardNotConsiderTest" executed="True" success="True" time="0.050" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.HeavyForwardConsiderTest" executed="True" success="True" time="0.040" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.HeavyForwardNotConsiderTest" executed="True" success="True" time="0.040" asserts="100" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotFromNotConsider" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotFromNotNot" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotFromToConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotFromToNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotNotNotConsider" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotNotNotNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotNotToConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotNotNotToNot" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2FromNotConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2FromNotNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2FromToConsider" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2FromToNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2NotNotConsider" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2NotNotNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2NotToConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.NotRef2NotToNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotFromNotConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotFromNotNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotFromToConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotFromToNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotNotNotConsider" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotNotNotNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotNotToConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1NotNotToNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2FromNotConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2FromNotNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2FromToConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2FromToNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2NotNotConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2NotNotNot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2NotToConsider" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.Ref1Ref2NotToNot" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="Simple.Tests.SimpleLib.WorkingDaysFixture.SoftTest" executed="True" success="True" time="0.220" asserts="1000" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>