<?xml version="1.0" encoding="utf-8" ?>
<simple>
  <business>
    <rulesFactoryType name="Simple.Rules.DefaultRulesProvider`1,SimpleServer"/>
    <rulesFactoryType name="Simple.ServiceModel.ServiceRulesProvider`1,SimpleCore"/>

    <filters ignoreCaseDefault="false"/>

    <exceptionHandling>
      <type name="Simple.DataAccess.DefaultExceptionHandler,SimpleServer"/>
    </exceptionHandling>
  </business>

  <serviceModel>
    <defaultBaseAddress>net.tcp://localhost:9001/</defaultBaseAddress>
    <!--<serviceConfiguratorType name="Simple.ServiceModel.MetadataBehaviorServiceConfigurator, SimpleCore">
      <address>mex</address>
      <httpGetEnabled>true</httpGetEnabled>
    </serviceConfiguratorType>-->
    <serviceConfiguratorType name="Simple.ServiceModel.SingletonServiceConfigurator, SimpleCore"/>
    <serviceConfiguratorType name="Simple.ServiceModel.ErrorBehaviorServiceConfigurator, SimpleCore"/>
    <serviceConfiguratorType name="Simple.ServiceModel.DebugServiceConfigurator, SimpleCore" enabled="true"/>

    <defaultEndpoint>
      <address></address>

      <endpointConfiguratorType name="Simple.ServiceModel.NetTcpBindingConfigurator, SimpleCore"/>
      <endpointConfiguratorType name="Simple.ServiceModel.DataContractConfigurator, SimpleCore"/>
      <endpointConfiguratorType name="Simple.ServiceModel.DefaultFaultsConfigurator, SimpleCore"/>
      <endpointConfiguratorType name="Simple.ServiceModel.OperationContextConfigurator, SimpleCore"/>
      <!--<endpointConfiguratorType name="Simple.ServiceModel.CredentialsServiceConfigurator, SimpleCore"/>-->
    </defaultEndpoint>

    <additionalEndpoints/>
  </serviceModel>

  <threading>
    <lockingProvider>
      <tableName>instance_state</tableName>
      <typeColumn>type</typeColumn>
      <idColumn>id</idColumn>
      <semaphoreColumn>semaphore</semaphoreColumn>
      <dataColumn>data</dataColumn>
      <defaultTimeout>30</defaultTimeout>
    </lockingProvider>
  </threading>

  <dataConfig>
    <options mergeBeforeUpdate="false"/>

    <defaultSessionFactory configFile="NHibernate.config"/>

    <!--<sessionFactory configFile="OtherSession.config" name="otherSession"/>-->
  </dataConfig>
</simple>