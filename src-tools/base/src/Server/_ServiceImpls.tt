<#@ template language="C#v3.5" hostspecific="True" debug="True" #>
<#@ output extension=".log" #>
<#@ Import Namespace="System" #>
<#@ include file="..\Templates\GeneratorBase.ttinclude" #>
<#
	var template = new ServiceImplTemplate();
	template.EntityNamespace = "Conspirarte.Domain";
	template.ServiceContractsNamespace = template.ServiceImplNamespace = "Conspirarte.Services";
	template.PreserveFile = true;
	template.OutputFileTemplate = @"Services\%sService.cs";
    template.Context = this;

    var generator = new GeneratorBase(template);
	generator.ConnectionString = GetNHConnectionString(@"..\Contracts\Environment\Development\NHibernate.config");
    generator.Run();
#>
<#+
public class ServiceImplTemplate : TableTemplate
{
	public string EntityNamespace { get; set; }
	public string ServiceContractsNamespace { get; set; }
	public string ServiceImplNamespace { get; set; }

	
    protected override void RenderCore()
    {
		RefreshOutputFile();
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Simple.Entities;
using <#= EntityNamespace #>;
using <#= ServiceContractsNamespace #>;

namespace <#=this.ServiceImplNamespace #>
{
    public partial class <#= GetTableClassName() #>Service : EntityService<#="<" + GetTableClassName() + ">"#>, I<#= GetTableClassName() #>Service
    {
    }
}

<#+ } 
}#>